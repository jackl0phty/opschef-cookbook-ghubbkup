#!/usr/bin/env ruby

# Include required libraries.
require 'optparse'
require 'github_api'

# Declare variables.
CONFDIR = '/etc/ghubbkup.conf'
github_user = ''
github_pass = ''

options = {}

opt_parser = OptionParser.new do |opt|
  opt.banner = "Usage: chefknife COMMAND [OPTIONS]"
  opt.separator  ""
  opt.separator  "Commands"
  opt.separator  "     all: Backups ALL Git repos on Github under a single user account."
  opt.separator  ""
  opt.separator  "Options"

  opt.on("-h","--help","help") do
    puts opt_parser
  end
end

opt_parser.parse!

def get_config

  # Declare local variables.
  ghubbkup_config = []

  # Read ghubbkup config & get github settings.
  #ghubbkup_config = File.open("#{CONFDIR}").map.each do |line|
  #  line.chomp!
  #  line.split('~~')
  #end

  # Loop array & clone ALL Github repos.
  #for config in ghubbkup_config

    # Uncomment lines below to debug.
  #  puts "Github options: #{config}"

  #end

   # Get github user.
  github_user = `cat #{CONFDIR} |grep github_user`
  github_user.slice! "github_user~~"

  # Get github password.
  github_pass = `cat #{CONFDIR} |grep github_pass`
  github_pass.slice! "github_pass~~"

  # Uncomment to debug.
  #puts "Github user: #{github_user}"
  #puts "Github pass: #{github_pass}"

end

def clone_repos()

  # Get Github user & pass.
  github_user = get_user_basic_auth()  
  github_pass = get_pass_basic_auth()

  # Remove white from creds.
  github_user.strip!
  github_pass.strip! 

  # Uncomment to debug.
  #puts "Github user: #{github_user}"
  #puts "Github pass: #{github_pass}" 

  # Get repo list.
  github = Github.new basic_auth: "#{github_user}:#{github_pass}"
  repos = Github.repos.list user: "#{github_user}"

  # Print repo list.
  puts "#{repos}"

  
end

def get_user_basic_auth

  # Get github user from config.
  github_user = `cat #{CONFDIR} |grep github_user`
  github_user.slice! "github_user~~"

  # Uncomment to debug.
  #puts "Github user: #{github_user}"

  # Return Github user. 
  return github_user

end

def get_pass_basic_auth

  # Get github password from config.
  github_pass = `cat #{CONFDIR} |grep github_pass`
  github_pass.slice! "github_pass~~"
  
  # Uncomment to debug.
  #puts "Github password: #{github_pass}"

  # Return Github password.
  return github_pass

end

case ARGV[0]

when "all"

  # Get Github creds & Clone ALL repos.
  clone_repos

else
  puts opt_parser
end
